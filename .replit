modules = ["python-3.11"]

[nix]
channel = "stable-25_05"
packages = ["bash", "glibcLocales", "libxcrypt", "pkg-config", "xsimd"]

[deployment]
deploymentTarget = "autoscale"
run = ["streamlit", "run", "app.py", "--server.port", "5000"]

[workflows]
runButton = "Project"

[[workflows.workflow]]
name = "Project"
mode = "parallel"
author = "agent"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Enterprise RAG Server"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "API Gateway"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Analytics Dashboard"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Coding Ground API"

[[workflows.workflow.tasks]]
task = "workflow.run"
args = "Coding Ground Frontend"

[[workflows.workflow]]
name = "Enterprise RAG Server"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "streamlit run enterprise_app.py --server.port 5000"
waitForPort = 5000

[[workflows.workflow]]
name = "API Gateway"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python api_gateway_standalone.py"
waitForPort = 8000

[[workflows.workflow]]
name = "Analytics Dashboard"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "streamlit run analytics_demo.py --server.port 5001"
waitForPort = 5001

[[workflows.workflow]]
name = "Coding Ground API"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "python coding_ground_api.py"
waitForPort = 8001

[[workflows.workflow]]
name = "Coding Ground Frontend"
author = "agent"

[[workflows.workflow.tasks]]
task = "shell.exec"
args = "streamlit run coding_ground_app.py --server.port 5002"
waitForPort = 5002

[[ports]]
localPort = 5000
externalPort = 80

[[ports]]
localPort = 5001
externalPort = 3000

[[ports]]
localPort = 5002
externalPort = 3001

[[ports]]
localPort = 8000
externalPort = 8000

[[ports]]
localPort = 8001
externalPort = 3002

[agent]
integrations = ["flask_supabase==1.0.0"]
